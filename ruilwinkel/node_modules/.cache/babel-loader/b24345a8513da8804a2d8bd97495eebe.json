{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime-corejs3/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _decode = _interopRequireDefault(require(\"./decode\"));\n\nvar _encode = _interopRequireDefault(require(\"./encode\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _CryptoController = _interopRequireDefault(require(\"./CryptoController\"));\n\nvar _InstallationController = _interopRequireDefault(require(\"./InstallationController\"));\n\nvar ParseOp = _interopRequireWildcard(require(\"./ParseOp\"));\n\nvar _RESTController = _interopRequireDefault(require(\"./RESTController\"));\n/**\r\n * Copyright (c) 2015-present, Parse, LLC.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n */\n\n/**\r\n * Contains all Moralis API classes and functions.\r\n *\r\n * @static\r\n * @global\r\n * @class\r\n * @hideconstructor\r\n */\n\n\nvar Moralis = {\n  authenticate: function (opts) {\n    return Moralis.Web3.authenticate(opts);\n  },\n\n  /**\r\n   * Call this method first to set up your authentication tokens for Moralis.\r\n   *\r\n   * @param {string} applicationId Your Moralis Application ID.\r\n   * @param {string} [javaScriptKey] Your Moralis JavaScript Key (Not needed for moralis-server)\r\n   * @param {string} [masterKey] Your Moralis Master Key. (Node.js only!)\r\n   * @static\r\n   */\n  initialize: function (applicationId\n  /*: string*/\n  , javaScriptKey\n  /*: string*/\n  ) {\n    if (\"browser\" === 'browser' && _CoreManager.default.get('IS_NODE') && !process.env.SERVER_RENDERING) {\n      /* eslint-disable no-console */\n      console.log(\"It looks like you're using the browser version of the SDK in a \" + \"node.js environment. You should require('parse/node') instead.\");\n      /* eslint-enable no-console */\n    }\n\n    Moralis._initialize(applicationId, javaScriptKey);\n  },\n  _initialize: function (applicationId\n  /*: string*/\n  , javaScriptKey\n  /*: string*/\n  , masterKey\n  /*: string*/\n  ) {\n    _CoreManager.default.set('APPLICATION_ID', applicationId);\n\n    _CoreManager.default.set('JAVASCRIPT_KEY', javaScriptKey);\n\n    _CoreManager.default.set('MASTER_KEY', masterKey);\n\n    _CoreManager.default.set('USE_MASTER_KEY', false);\n  },\n\n  /**\r\n   * Call this method to set your AsyncStorage engine\r\n   * Starting Parse@1.11, the ParseSDK do not provide a React AsyncStorage as the ReactNative module\r\n   * is not provided at a stable path and changes over versions.\r\n   *\r\n   * @param {AsyncStorage} storage a react native async storage.\r\n   * @static\r\n   */\n  setAsyncStorage: function (storage\n  /*: any*/\n  ) {\n    _CoreManager.default.setAsyncStorage(storage);\n  },\n\n  /**\r\n   * Call this method to set your LocalDatastoreStorage engine\r\n   * If using React-Native use {@link Moralis.setAsyncStorage Moralis.setAsyncStorage()}\r\n   *\r\n   * @param {LocalDatastoreController} controller a data storage.\r\n   * @static\r\n   */\n  setLocalDatastoreController: function (controller\n  /*: any*/\n  ) {\n    _CoreManager.default.setLocalDatastoreController(controller);\n  },\n\n  /**\r\n   * @member {string} Moralis.applicationId\r\n   * @static\r\n   */\n  set applicationId(value) {\n    _CoreManager.default.set('APPLICATION_ID', value);\n  },\n\n  get applicationId() {\n    return _CoreManager.default.get('APPLICATION_ID');\n  },\n\n  /**\r\n   * @member {string} Moralis.javaScriptKey\r\n   * @static\r\n   */\n  set javaScriptKey(value) {\n    _CoreManager.default.set('JAVASCRIPT_KEY', value);\n  },\n\n  get javaScriptKey() {\n    return _CoreManager.default.get('JAVASCRIPT_KEY');\n  },\n\n  /**\r\n   * @member {string} Moralis.masterKey\r\n   * @static\r\n   */\n  set masterKey(value) {\n    _CoreManager.default.set('MASTER_KEY', value);\n  },\n\n  get masterKey() {\n    return _CoreManager.default.get('MASTER_KEY');\n  },\n\n  /**\r\n   * @member {string} Moralis.serverURL\r\n   * @static\r\n   */\n  set serverURL(value) {\n    _CoreManager.default.set('SERVER_URL', value);\n  },\n\n  get serverURL() {\n    return _CoreManager.default.get('SERVER_URL');\n  },\n\n  /**\r\n   * @member {string} Moralis.serverAuthToken\r\n   * @static\r\n   */\n  set serverAuthToken(value) {\n    _CoreManager.default.set('SERVER_AUTH_TOKEN', value);\n  },\n\n  get serverAuthToken() {\n    return _CoreManager.default.get('SERVER_AUTH_TOKEN');\n  },\n\n  /**\r\n   * @member {string} Moralis.serverAuthType\r\n   * @static\r\n   */\n  set serverAuthType(value) {\n    _CoreManager.default.set('SERVER_AUTH_TYPE', value);\n  },\n\n  get serverAuthType() {\n    return _CoreManager.default.get('SERVER_AUTH_TYPE');\n  },\n\n  /**\r\n   * @member {string} Moralis.liveQueryServerURL\r\n   * @static\r\n   */\n  set liveQueryServerURL(value) {\n    _CoreManager.default.set('LIVEQUERY_SERVER_URL', value);\n  },\n\n  get liveQueryServerURL() {\n    return _CoreManager.default.get('LIVEQUERY_SERVER_URL');\n  },\n\n  /**\r\n   * @member {string} Moralis.encryptedUser\r\n   * @static\r\n   */\n  set encryptedUser(value) {\n    _CoreManager.default.set('ENCRYPTED_USER', value);\n  },\n\n  get encryptedUser() {\n    return _CoreManager.default.get('ENCRYPTED_USER');\n  },\n\n  /**\r\n   * @member {string} Moralis.secret\r\n   * @static\r\n   */\n  set secret(value) {\n    _CoreManager.default.set('ENCRYPTED_KEY', value);\n  },\n\n  get secret() {\n    return _CoreManager.default.get('ENCRYPTED_KEY');\n  },\n\n  /**\r\n   * @member {boolean} Moralis.idempotency\r\n   * @static\r\n   */\n  set idempotency(value) {\n    _CoreManager.default.set('IDEMPOTENCY', value);\n  },\n\n  get idempotency() {\n    return _CoreManager.default.get('IDEMPOTENCY');\n  }\n\n};\nMoralis.ACL = require('./ParseACL').default;\nMoralis.Analytics = require('./Analytics');\nMoralis.AnonymousUtils = require('./AnonymousUtils').default;\nMoralis.Cloud = require('./Cloud');\nMoralis.CLP = require('./ParseCLP').default;\nMoralis.CoreManager = require('./CoreManager');\nMoralis.Config = require('./ParseConfig').default;\nMoralis.Error = require('./ParseError').default;\nMoralis.FacebookUtils = require('./FacebookUtils').default;\nMoralis.File = require('./ParseFile').default;\nMoralis.GeoPoint = require('./ParseGeoPoint').default;\nMoralis.Polygon = require('./ParsePolygon').default;\nMoralis.Installation = require('./ParseInstallation').default;\nMoralis.LocalDatastore = require('./LocalDatastore');\nMoralis.Object = require('./ParseObject').default;\nMoralis.Op = {\n  Set: ParseOp.SetOp,\n  Unset: ParseOp.UnsetOp,\n  Increment: ParseOp.IncrementOp,\n  Add: ParseOp.AddOp,\n  Remove: ParseOp.RemoveOp,\n  AddUnique: ParseOp.AddUniqueOp,\n  Relation: ParseOp.RelationOp\n};\nMoralis.Push = require('./Push');\nMoralis.Query = require('./ParseQuery').default;\nMoralis.Relation = require('./ParseRelation').default;\nMoralis.Role = require('./ParseRole').default;\nMoralis.Schema = require('./ParseSchema').default;\nMoralis.Session = require('./ParseSession').default;\nMoralis.Storage = require('./Storage');\nMoralis.User = require('./ParseUser').default;\nMoralis.LiveQuery = require('./ParseLiveQuery').default;\nMoralis.LiveQueryClient = require('./LiveQueryClient').default;\nMoralis.Web3 = require('./MoralisWeb3').default;\nMoralis.Elrond = require('./MoralisErd').default;\nMoralis.Erd = Moralis.Elrond;\nMoralis.Dot = require('./MoralisDot').default;\nMoralis.UI = require('./MoralisUI').default;\n\nMoralis._request = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return _CoreManager.default.getRESTController().request.apply(null, args);\n};\n\nMoralis._ajax = function () {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return _CoreManager.default.getRESTController().ajax.apply(null, args);\n}; // We attempt to match the signatures of the legacy versions of these methods\n\n\nMoralis._decode = function (_, value) {\n  return (0, _decode.default)(value);\n};\n\nMoralis._encode = function (value, _, disallowObjects) {\n  return (0, _encode.default)(value, disallowObjects);\n};\n\nMoralis._getInstallationId = function () {\n  return _CoreManager.default.getInstallationController().currentInstallationId();\n};\n/**\r\n * Enable pinning in your application.\r\n * This must be called before your application can use pinning.\r\n *\r\n * @static\r\n */\n\n\nMoralis.enableLocalDatastore = function () {\n  Moralis.LocalDatastore.isEnabled = true;\n};\n/**\r\n * Flag that indicates whether Local Datastore is enabled.\r\n *\r\n * @static\r\n * @returns {boolean}\r\n */\n\n\nMoralis.isLocalDatastoreEnabled = function () {\n  return Moralis.LocalDatastore.isEnabled;\n};\n/**\r\n * Gets all contents from Local Datastore\r\n *\r\n * <pre>\r\n * await Moralis.dumpLocalDatastore();\r\n * </pre>\r\n *\r\n * @static\r\n * @returns {object}\r\n */\n\n\nMoralis.dumpLocalDatastore = function () {\n  if (!Moralis.LocalDatastore.isEnabled) {\n    console.log('Moralis.enableLocalDatastore() must be called first'); // eslint-disable-line no-console\n\n    return _promise.default.resolve({});\n  } else {\n    return Moralis.LocalDatastore._getAllContents();\n  }\n};\n/**\r\n * Enable the current user encryption.\r\n * This must be called before login any user.\r\n *\r\n * @static\r\n */\n\n\nMoralis.enableEncryptedUser = function () {\n  Moralis.encryptedUser = true;\n};\n/**\r\n * Flag that indicates whether Encrypted User is enabled.\r\n *\r\n * @static\r\n * @returns {boolean}\r\n */\n\n\nMoralis.isEncryptedUserEnabled = function () {\n  return Moralis.encryptedUser;\n};\n\n_CoreManager.default.setCryptoController(_CryptoController.default);\n\n_CoreManager.default.setInstallationController(_InstallationController.default);\n\n_CoreManager.default.setRESTController(_RESTController.default); // For legacy requires, of the form `var Moralis = require('moralis').Moralis`\n\n\nMoralis.Moralis = Moralis;\nmodule.exports = Moralis;","map":{"version":3,"sources":["C:/Users/Stygal/Documents/Zuyd/blok 4/Casusblok-4-jaar-2-groep-F4/ruilwinkel/node_modules/moralis/lib/browser/Parse.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","_promise","_decode","_encode","_CoreManager","_CryptoController","_InstallationController","ParseOp","_RESTController","Moralis","authenticate","opts","Web3","initialize","applicationId","javaScriptKey","default","get","process","env","SERVER_RENDERING","console","log","_initialize","masterKey","set","setAsyncStorage","storage","setLocalDatastoreController","controller","value","serverURL","serverAuthToken","serverAuthType","liveQueryServerURL","encryptedUser","secret","idempotency","ACL","Analytics","AnonymousUtils","Cloud","CLP","CoreManager","Config","Error","FacebookUtils","File","GeoPoint","Polygon","Installation","LocalDatastore","Object","Op","Set","SetOp","Unset","UnsetOp","Increment","IncrementOp","Add","AddOp","Remove","RemoveOp","AddUnique","AddUniqueOp","Relation","RelationOp","Push","Query","Role","Schema","Session","Storage","User","LiveQuery","LiveQueryClient","Elrond","Erd","Dot","UI","_request","_len","arguments","length","args","Array","_key","getRESTController","request","apply","_ajax","_len2","_key2","ajax","_","disallowObjects","_getInstallationId","getInstallationController","currentInstallationId","enableLocalDatastore","isEnabled","isLocalDatastoreEnabled","dumpLocalDatastore","resolve","_getAllContents","enableEncryptedUser","isEncryptedUserEnabled","setCryptoController","setInstallationController","setRESTController","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,uDAAD,CAArC;;AAEA,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,sDAAD,CAApC;;AAEA,IAAIE,QAAQ,GAAGD,sBAAsB,CAACD,OAAO,CAAC,+CAAD,CAAR,CAArC;;AAEA,IAAIG,OAAO,GAAGF,sBAAsB,CAACD,OAAO,CAAC,UAAD,CAAR,CAApC;;AAEA,IAAII,OAAO,GAAGH,sBAAsB,CAACD,OAAO,CAAC,UAAD,CAAR,CAApC;;AAEA,IAAIK,YAAY,GAAGJ,sBAAsB,CAACD,OAAO,CAAC,eAAD,CAAR,CAAzC;;AAEA,IAAIM,iBAAiB,GAAGL,sBAAsB,CAACD,OAAO,CAAC,oBAAD,CAAR,CAA9C;;AAEA,IAAIO,uBAAuB,GAAGN,sBAAsB,CAACD,OAAO,CAAC,0BAAD,CAAR,CAApD;;AAEA,IAAIQ,OAAO,GAAGT,uBAAuB,CAACC,OAAO,CAAC,WAAD,CAAR,CAArC;;AAEA,IAAIS,eAAe,GAAGR,sBAAsB,CAACD,OAAO,CAAC,kBAAD,CAAR,CAA5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIU,OAAO,GAAG;AACZC,EAAAA,YAAY,EAAE,UAAUC,IAAV,EAAgB;AAC5B,WAAOF,OAAO,CAACG,IAAR,CAAaF,YAAb,CAA0BC,IAA1B,CAAP;AACD,GAHW;;AAKZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEE,EAAAA,UAAU,EAAE,UAAUC;AACtB;AADY,IAEVC;AACF;AAHY,IAIV;AACA,QAAI,cAAc,SAAd,IAA2BX,YAAY,CAACY,OAAb,CAAqBC,GAArB,CAAyB,SAAzB,CAA3B,IAAkE,CAACC,OAAO,CAACC,GAAR,CAAYC,gBAAnF,EAAqG;AACnG;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,oEAAoE,gEAAhF;AACA;AACD;;AAEDb,IAAAA,OAAO,CAACc,WAAR,CAAoBT,aAApB,EAAmCC,aAAnC;AACD,GAzBW;AA0BZQ,EAAAA,WAAW,EAAE,UAAUT;AACvB;AADa,IAEXC;AACF;AAHa,IAIXS;AACF;AALa,IAMX;AACApB,IAAAA,YAAY,CAACY,OAAb,CAAqBS,GAArB,CAAyB,gBAAzB,EAA2CX,aAA3C;;AAEAV,IAAAA,YAAY,CAACY,OAAb,CAAqBS,GAArB,CAAyB,gBAAzB,EAA2CV,aAA3C;;AAEAX,IAAAA,YAAY,CAACY,OAAb,CAAqBS,GAArB,CAAyB,YAAzB,EAAuCD,SAAvC;;AAEApB,IAAAA,YAAY,CAACY,OAAb,CAAqBS,GAArB,CAAyB,gBAAzB,EAA2C,KAA3C;AACD,GAxCW;;AA0CZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,eAAe,EAAE,UAAUC;AAC3B;AADiB,IAEf;AACAvB,IAAAA,YAAY,CAACY,OAAb,CAAqBU,eAArB,CAAqCC,OAArC;AACD,GAtDW;;AAwDZ;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,2BAA2B,EAAE,UAAUC;AACvC;AAD6B,IAE3B;AACAzB,IAAAA,YAAY,CAACY,OAAb,CAAqBY,2BAArB,CAAiDC,UAAjD;AACD,GAnEW;;AAqEZ;AACF;AACA;AACA;AACE,MAAIf,aAAJ,CAAkBgB,KAAlB,EAAyB;AACvB1B,IAAAA,YAAY,CAACY,OAAb,CAAqBS,GAArB,CAAyB,gBAAzB,EAA2CK,KAA3C;AACD,GA3EW;;AA6EZ,MAAIhB,aAAJ,GAAoB;AAClB,WAAOV,YAAY,CAACY,OAAb,CAAqBC,GAArB,CAAyB,gBAAzB,CAAP;AACD,GA/EW;;AAiFZ;AACF;AACA;AACA;AACE,MAAIF,aAAJ,CAAkBe,KAAlB,EAAyB;AACvB1B,IAAAA,YAAY,CAACY,OAAb,CAAqBS,GAArB,CAAyB,gBAAzB,EAA2CK,KAA3C;AACD,GAvFW;;AAyFZ,MAAIf,aAAJ,GAAoB;AAClB,WAAOX,YAAY,CAACY,OAAb,CAAqBC,GAArB,CAAyB,gBAAzB,CAAP;AACD,GA3FW;;AA6FZ;AACF;AACA;AACA;AACE,MAAIO,SAAJ,CAAcM,KAAd,EAAqB;AACnB1B,IAAAA,YAAY,CAACY,OAAb,CAAqBS,GAArB,CAAyB,YAAzB,EAAuCK,KAAvC;AACD,GAnGW;;AAqGZ,MAAIN,SAAJ,GAAgB;AACd,WAAOpB,YAAY,CAACY,OAAb,CAAqBC,GAArB,CAAyB,YAAzB,CAAP;AACD,GAvGW;;AAyGZ;AACF;AACA;AACA;AACE,MAAIc,SAAJ,CAAcD,KAAd,EAAqB;AACnB1B,IAAAA,YAAY,CAACY,OAAb,CAAqBS,GAArB,CAAyB,YAAzB,EAAuCK,KAAvC;AACD,GA/GW;;AAiHZ,MAAIC,SAAJ,GAAgB;AACd,WAAO3B,YAAY,CAACY,OAAb,CAAqBC,GAArB,CAAyB,YAAzB,CAAP;AACD,GAnHW;;AAqHZ;AACF;AACA;AACA;AACE,MAAIe,eAAJ,CAAoBF,KAApB,EAA2B;AACzB1B,IAAAA,YAAY,CAACY,OAAb,CAAqBS,GAArB,CAAyB,mBAAzB,EAA8CK,KAA9C;AACD,GA3HW;;AA6HZ,MAAIE,eAAJ,GAAsB;AACpB,WAAO5B,YAAY,CAACY,OAAb,CAAqBC,GAArB,CAAyB,mBAAzB,CAAP;AACD,GA/HW;;AAiIZ;AACF;AACA;AACA;AACE,MAAIgB,cAAJ,CAAmBH,KAAnB,EAA0B;AACxB1B,IAAAA,YAAY,CAACY,OAAb,CAAqBS,GAArB,CAAyB,kBAAzB,EAA6CK,KAA7C;AACD,GAvIW;;AAyIZ,MAAIG,cAAJ,GAAqB;AACnB,WAAO7B,YAAY,CAACY,OAAb,CAAqBC,GAArB,CAAyB,kBAAzB,CAAP;AACD,GA3IW;;AA6IZ;AACF;AACA;AACA;AACE,MAAIiB,kBAAJ,CAAuBJ,KAAvB,EAA8B;AAC5B1B,IAAAA,YAAY,CAACY,OAAb,CAAqBS,GAArB,CAAyB,sBAAzB,EAAiDK,KAAjD;AACD,GAnJW;;AAqJZ,MAAII,kBAAJ,GAAyB;AACvB,WAAO9B,YAAY,CAACY,OAAb,CAAqBC,GAArB,CAAyB,sBAAzB,CAAP;AACD,GAvJW;;AAyJZ;AACF;AACA;AACA;AACE,MAAIkB,aAAJ,CAAkBL,KAAlB,EAAyB;AACvB1B,IAAAA,YAAY,CAACY,OAAb,CAAqBS,GAArB,CAAyB,gBAAzB,EAA2CK,KAA3C;AACD,GA/JW;;AAiKZ,MAAIK,aAAJ,GAAoB;AAClB,WAAO/B,YAAY,CAACY,OAAb,CAAqBC,GAArB,CAAyB,gBAAzB,CAAP;AACD,GAnKW;;AAqKZ;AACF;AACA;AACA;AACE,MAAImB,MAAJ,CAAWN,KAAX,EAAkB;AAChB1B,IAAAA,YAAY,CAACY,OAAb,CAAqBS,GAArB,CAAyB,eAAzB,EAA0CK,KAA1C;AACD,GA3KW;;AA6KZ,MAAIM,MAAJ,GAAa;AACX,WAAOhC,YAAY,CAACY,OAAb,CAAqBC,GAArB,CAAyB,eAAzB,CAAP;AACD,GA/KW;;AAiLZ;AACF;AACA;AACA;AACE,MAAIoB,WAAJ,CAAgBP,KAAhB,EAAuB;AACrB1B,IAAAA,YAAY,CAACY,OAAb,CAAqBS,GAArB,CAAyB,aAAzB,EAAwCK,KAAxC;AACD,GAvLW;;AAyLZ,MAAIO,WAAJ,GAAkB;AAChB,WAAOjC,YAAY,CAACY,OAAb,CAAqBC,GAArB,CAAyB,aAAzB,CAAP;AACD;;AA3LW,CAAd;AA8LAR,OAAO,CAAC6B,GAAR,GAAcvC,OAAO,CAAC,YAAD,CAAP,CAAsBiB,OAApC;AACAP,OAAO,CAAC8B,SAAR,GAAoBxC,OAAO,CAAC,aAAD,CAA3B;AACAU,OAAO,CAAC+B,cAAR,GAAyBzC,OAAO,CAAC,kBAAD,CAAP,CAA4BiB,OAArD;AACAP,OAAO,CAACgC,KAAR,GAAgB1C,OAAO,CAAC,SAAD,CAAvB;AACAU,OAAO,CAACiC,GAAR,GAAc3C,OAAO,CAAC,YAAD,CAAP,CAAsBiB,OAApC;AACAP,OAAO,CAACkC,WAAR,GAAsB5C,OAAO,CAAC,eAAD,CAA7B;AACAU,OAAO,CAACmC,MAAR,GAAiB7C,OAAO,CAAC,eAAD,CAAP,CAAyBiB,OAA1C;AACAP,OAAO,CAACoC,KAAR,GAAgB9C,OAAO,CAAC,cAAD,CAAP,CAAwBiB,OAAxC;AACAP,OAAO,CAACqC,aAAR,GAAwB/C,OAAO,CAAC,iBAAD,CAAP,CAA2BiB,OAAnD;AACAP,OAAO,CAACsC,IAAR,GAAehD,OAAO,CAAC,aAAD,CAAP,CAAuBiB,OAAtC;AACAP,OAAO,CAACuC,QAAR,GAAmBjD,OAAO,CAAC,iBAAD,CAAP,CAA2BiB,OAA9C;AACAP,OAAO,CAACwC,OAAR,GAAkBlD,OAAO,CAAC,gBAAD,CAAP,CAA0BiB,OAA5C;AACAP,OAAO,CAACyC,YAAR,GAAuBnD,OAAO,CAAC,qBAAD,CAAP,CAA+BiB,OAAtD;AACAP,OAAO,CAAC0C,cAAR,GAAyBpD,OAAO,CAAC,kBAAD,CAAhC;AACAU,OAAO,CAAC2C,MAAR,GAAiBrD,OAAO,CAAC,eAAD,CAAP,CAAyBiB,OAA1C;AACAP,OAAO,CAAC4C,EAAR,GAAa;AACXC,EAAAA,GAAG,EAAE/C,OAAO,CAACgD,KADF;AAEXC,EAAAA,KAAK,EAAEjD,OAAO,CAACkD,OAFJ;AAGXC,EAAAA,SAAS,EAAEnD,OAAO,CAACoD,WAHR;AAIXC,EAAAA,GAAG,EAAErD,OAAO,CAACsD,KAJF;AAKXC,EAAAA,MAAM,EAAEvD,OAAO,CAACwD,QALL;AAMXC,EAAAA,SAAS,EAAEzD,OAAO,CAAC0D,WANR;AAOXC,EAAAA,QAAQ,EAAE3D,OAAO,CAAC4D;AAPP,CAAb;AASA1D,OAAO,CAAC2D,IAAR,GAAerE,OAAO,CAAC,QAAD,CAAtB;AACAU,OAAO,CAAC4D,KAAR,GAAgBtE,OAAO,CAAC,cAAD,CAAP,CAAwBiB,OAAxC;AACAP,OAAO,CAACyD,QAAR,GAAmBnE,OAAO,CAAC,iBAAD,CAAP,CAA2BiB,OAA9C;AACAP,OAAO,CAAC6D,IAAR,GAAevE,OAAO,CAAC,aAAD,CAAP,CAAuBiB,OAAtC;AACAP,OAAO,CAAC8D,MAAR,GAAiBxE,OAAO,CAAC,eAAD,CAAP,CAAyBiB,OAA1C;AACAP,OAAO,CAAC+D,OAAR,GAAkBzE,OAAO,CAAC,gBAAD,CAAP,CAA0BiB,OAA5C;AACAP,OAAO,CAACgE,OAAR,GAAkB1E,OAAO,CAAC,WAAD,CAAzB;AACAU,OAAO,CAACiE,IAAR,GAAe3E,OAAO,CAAC,aAAD,CAAP,CAAuBiB,OAAtC;AACAP,OAAO,CAACkE,SAAR,GAAoB5E,OAAO,CAAC,kBAAD,CAAP,CAA4BiB,OAAhD;AACAP,OAAO,CAACmE,eAAR,GAA0B7E,OAAO,CAAC,mBAAD,CAAP,CAA6BiB,OAAvD;AACAP,OAAO,CAACG,IAAR,GAAeb,OAAO,CAAC,eAAD,CAAP,CAAyBiB,OAAxC;AACAP,OAAO,CAACoE,MAAR,GAAiB9E,OAAO,CAAC,cAAD,CAAP,CAAwBiB,OAAzC;AACAP,OAAO,CAACqE,GAAR,GAAcrE,OAAO,CAACoE,MAAtB;AACApE,OAAO,CAACsE,GAAR,GAAchF,OAAO,CAAC,cAAD,CAAP,CAAwBiB,OAAtC;AACAP,OAAO,CAACuE,EAAR,GAAajF,OAAO,CAAC,aAAD,CAAP,CAAuBiB,OAApC;;AAEAP,OAAO,CAACwE,QAAR,GAAmB,YAAY;AAC7B,OAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAV,CAApC,EAAqDK,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGL,IAA3E,EAAiFK,IAAI,EAArF,EAAyF;AACvFF,IAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACD;;AAED,SAAOnF,YAAY,CAACY,OAAb,CAAqBwE,iBAArB,GAAyCC,OAAzC,CAAiDC,KAAjD,CAAuD,IAAvD,EAA6DL,IAA7D,CAAP;AACD,CAND;;AAQA5E,OAAO,CAACkF,KAAR,GAAgB,YAAY;AAC1B,OAAK,IAAIC,KAAK,GAAGT,SAAS,CAACC,MAAtB,EAA8BC,IAAI,GAAG,IAAIC,KAAJ,CAAUM,KAAV,CAArC,EAAuDC,KAAK,GAAG,CAApE,EAAuEA,KAAK,GAAGD,KAA/E,EAAsFC,KAAK,EAA3F,EAA+F;AAC7FR,IAAAA,IAAI,CAACQ,KAAD,CAAJ,GAAcV,SAAS,CAACU,KAAD,CAAvB;AACD;;AAED,SAAOzF,YAAY,CAACY,OAAb,CAAqBwE,iBAArB,GAAyCM,IAAzC,CAA8CJ,KAA9C,CAAoD,IAApD,EAA0DL,IAA1D,CAAP;AACD,CAND,C,CAMG;;;AAGH5E,OAAO,CAACP,OAAR,GAAkB,UAAU6F,CAAV,EAAajE,KAAb,EAAoB;AACpC,SAAO,CAAC,GAAG5B,OAAO,CAACc,OAAZ,EAAqBc,KAArB,CAAP;AACD,CAFD;;AAIArB,OAAO,CAACN,OAAR,GAAkB,UAAU2B,KAAV,EAAiBiE,CAAjB,EAAoBC,eAApB,EAAqC;AACrD,SAAO,CAAC,GAAG7F,OAAO,CAACa,OAAZ,EAAqBc,KAArB,EAA4BkE,eAA5B,CAAP;AACD,CAFD;;AAIAvF,OAAO,CAACwF,kBAAR,GAA6B,YAAY;AACvC,SAAO7F,YAAY,CAACY,OAAb,CAAqBkF,yBAArB,GAAiDC,qBAAjD,EAAP;AACD,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA1F,OAAO,CAAC2F,oBAAR,GAA+B,YAAY;AACzC3F,EAAAA,OAAO,CAAC0C,cAAR,CAAuBkD,SAAvB,GAAmC,IAAnC;AACD,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA5F,OAAO,CAAC6F,uBAAR,GAAkC,YAAY;AAC5C,SAAO7F,OAAO,CAAC0C,cAAR,CAAuBkD,SAA9B;AACD,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA5F,OAAO,CAAC8F,kBAAR,GAA6B,YAAY;AACvC,MAAI,CAAC9F,OAAO,CAAC0C,cAAR,CAAuBkD,SAA5B,EAAuC;AACrChF,IAAAA,OAAO,CAACC,GAAR,CAAY,qDAAZ,EADqC,CAC+B;;AAEpE,WAAOrB,QAAQ,CAACe,OAAT,CAAiBwF,OAAjB,CAAyB,EAAzB,CAAP;AACD,GAJD,MAIO;AACL,WAAO/F,OAAO,CAAC0C,cAAR,CAAuBsD,eAAvB,EAAP;AACD;AACF,CARD;AASA;AACA;AACA;AACA;AACA;AACA;;;AAGAhG,OAAO,CAACiG,mBAAR,GAA8B,YAAY;AACxCjG,EAAAA,OAAO,CAAC0B,aAAR,GAAwB,IAAxB;AACD,CAFD;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA1B,OAAO,CAACkG,sBAAR,GAAiC,YAAY;AAC3C,SAAOlG,OAAO,CAAC0B,aAAf;AACD,CAFD;;AAIA/B,YAAY,CAACY,OAAb,CAAqB4F,mBAArB,CAAyCvG,iBAAiB,CAACW,OAA3D;;AAEAZ,YAAY,CAACY,OAAb,CAAqB6F,yBAArB,CAA+CvG,uBAAuB,CAACU,OAAvE;;AAEAZ,YAAY,CAACY,OAAb,CAAqB8F,iBAArB,CAAuCtG,eAAe,CAACQ,OAAvD,E,CAEA;;;AACAP,OAAO,CAACA,OAAR,GAAkBA,OAAlB;AACAsG,MAAM,CAACC,OAAP,GAAiBvG,OAAjB","sourcesContent":["\"use strict\";\r\n\r\nvar _interopRequireWildcard = require(\"@babel/runtime-corejs3/helpers/interopRequireWildcard\");\r\n\r\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\r\n\r\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\r\n\r\nvar _decode = _interopRequireDefault(require(\"./decode\"));\r\n\r\nvar _encode = _interopRequireDefault(require(\"./encode\"));\r\n\r\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\r\n\r\nvar _CryptoController = _interopRequireDefault(require(\"./CryptoController\"));\r\n\r\nvar _InstallationController = _interopRequireDefault(require(\"./InstallationController\"));\r\n\r\nvar ParseOp = _interopRequireWildcard(require(\"./ParseOp\"));\r\n\r\nvar _RESTController = _interopRequireDefault(require(\"./RESTController\"));\r\n/**\r\n * Copyright (c) 2015-present, Parse, LLC.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n */\r\n\r\n/**\r\n * Contains all Moralis API classes and functions.\r\n *\r\n * @static\r\n * @global\r\n * @class\r\n * @hideconstructor\r\n */\r\n\r\n\r\nvar Moralis = {\r\n  authenticate: function (opts) {\r\n    return Moralis.Web3.authenticate(opts);\r\n  },\r\n\r\n  /**\r\n   * Call this method first to set up your authentication tokens for Moralis.\r\n   *\r\n   * @param {string} applicationId Your Moralis Application ID.\r\n   * @param {string} [javaScriptKey] Your Moralis JavaScript Key (Not needed for moralis-server)\r\n   * @param {string} [masterKey] Your Moralis Master Key. (Node.js only!)\r\n   * @static\r\n   */\r\n  initialize: function (applicationId\r\n  /*: string*/\r\n  , javaScriptKey\r\n  /*: string*/\r\n  ) {\r\n    if (\"browser\" === 'browser' && _CoreManager.default.get('IS_NODE') && !process.env.SERVER_RENDERING) {\r\n      /* eslint-disable no-console */\r\n      console.log(\"It looks like you're using the browser version of the SDK in a \" + \"node.js environment. You should require('parse/node') instead.\");\r\n      /* eslint-enable no-console */\r\n    }\r\n\r\n    Moralis._initialize(applicationId, javaScriptKey);\r\n  },\r\n  _initialize: function (applicationId\r\n  /*: string*/\r\n  , javaScriptKey\r\n  /*: string*/\r\n  , masterKey\r\n  /*: string*/\r\n  ) {\r\n    _CoreManager.default.set('APPLICATION_ID', applicationId);\r\n\r\n    _CoreManager.default.set('JAVASCRIPT_KEY', javaScriptKey);\r\n\r\n    _CoreManager.default.set('MASTER_KEY', masterKey);\r\n\r\n    _CoreManager.default.set('USE_MASTER_KEY', false);\r\n  },\r\n\r\n  /**\r\n   * Call this method to set your AsyncStorage engine\r\n   * Starting Parse@1.11, the ParseSDK do not provide a React AsyncStorage as the ReactNative module\r\n   * is not provided at a stable path and changes over versions.\r\n   *\r\n   * @param {AsyncStorage} storage a react native async storage.\r\n   * @static\r\n   */\r\n  setAsyncStorage: function (storage\r\n  /*: any*/\r\n  ) {\r\n    _CoreManager.default.setAsyncStorage(storage);\r\n  },\r\n\r\n  /**\r\n   * Call this method to set your LocalDatastoreStorage engine\r\n   * If using React-Native use {@link Moralis.setAsyncStorage Moralis.setAsyncStorage()}\r\n   *\r\n   * @param {LocalDatastoreController} controller a data storage.\r\n   * @static\r\n   */\r\n  setLocalDatastoreController: function (controller\r\n  /*: any*/\r\n  ) {\r\n    _CoreManager.default.setLocalDatastoreController(controller);\r\n  },\r\n\r\n  /**\r\n   * @member {string} Moralis.applicationId\r\n   * @static\r\n   */\r\n  set applicationId(value) {\r\n    _CoreManager.default.set('APPLICATION_ID', value);\r\n  },\r\n\r\n  get applicationId() {\r\n    return _CoreManager.default.get('APPLICATION_ID');\r\n  },\r\n\r\n  /**\r\n   * @member {string} Moralis.javaScriptKey\r\n   * @static\r\n   */\r\n  set javaScriptKey(value) {\r\n    _CoreManager.default.set('JAVASCRIPT_KEY', value);\r\n  },\r\n\r\n  get javaScriptKey() {\r\n    return _CoreManager.default.get('JAVASCRIPT_KEY');\r\n  },\r\n\r\n  /**\r\n   * @member {string} Moralis.masterKey\r\n   * @static\r\n   */\r\n  set masterKey(value) {\r\n    _CoreManager.default.set('MASTER_KEY', value);\r\n  },\r\n\r\n  get masterKey() {\r\n    return _CoreManager.default.get('MASTER_KEY');\r\n  },\r\n\r\n  /**\r\n   * @member {string} Moralis.serverURL\r\n   * @static\r\n   */\r\n  set serverURL(value) {\r\n    _CoreManager.default.set('SERVER_URL', value);\r\n  },\r\n\r\n  get serverURL() {\r\n    return _CoreManager.default.get('SERVER_URL');\r\n  },\r\n\r\n  /**\r\n   * @member {string} Moralis.serverAuthToken\r\n   * @static\r\n   */\r\n  set serverAuthToken(value) {\r\n    _CoreManager.default.set('SERVER_AUTH_TOKEN', value);\r\n  },\r\n\r\n  get serverAuthToken() {\r\n    return _CoreManager.default.get('SERVER_AUTH_TOKEN');\r\n  },\r\n\r\n  /**\r\n   * @member {string} Moralis.serverAuthType\r\n   * @static\r\n   */\r\n  set serverAuthType(value) {\r\n    _CoreManager.default.set('SERVER_AUTH_TYPE', value);\r\n  },\r\n\r\n  get serverAuthType() {\r\n    return _CoreManager.default.get('SERVER_AUTH_TYPE');\r\n  },\r\n\r\n  /**\r\n   * @member {string} Moralis.liveQueryServerURL\r\n   * @static\r\n   */\r\n  set liveQueryServerURL(value) {\r\n    _CoreManager.default.set('LIVEQUERY_SERVER_URL', value);\r\n  },\r\n\r\n  get liveQueryServerURL() {\r\n    return _CoreManager.default.get('LIVEQUERY_SERVER_URL');\r\n  },\r\n\r\n  /**\r\n   * @member {string} Moralis.encryptedUser\r\n   * @static\r\n   */\r\n  set encryptedUser(value) {\r\n    _CoreManager.default.set('ENCRYPTED_USER', value);\r\n  },\r\n\r\n  get encryptedUser() {\r\n    return _CoreManager.default.get('ENCRYPTED_USER');\r\n  },\r\n\r\n  /**\r\n   * @member {string} Moralis.secret\r\n   * @static\r\n   */\r\n  set secret(value) {\r\n    _CoreManager.default.set('ENCRYPTED_KEY', value);\r\n  },\r\n\r\n  get secret() {\r\n    return _CoreManager.default.get('ENCRYPTED_KEY');\r\n  },\r\n\r\n  /**\r\n   * @member {boolean} Moralis.idempotency\r\n   * @static\r\n   */\r\n  set idempotency(value) {\r\n    _CoreManager.default.set('IDEMPOTENCY', value);\r\n  },\r\n\r\n  get idempotency() {\r\n    return _CoreManager.default.get('IDEMPOTENCY');\r\n  }\r\n\r\n};\r\nMoralis.ACL = require('./ParseACL').default;\r\nMoralis.Analytics = require('./Analytics');\r\nMoralis.AnonymousUtils = require('./AnonymousUtils').default;\r\nMoralis.Cloud = require('./Cloud');\r\nMoralis.CLP = require('./ParseCLP').default;\r\nMoralis.CoreManager = require('./CoreManager');\r\nMoralis.Config = require('./ParseConfig').default;\r\nMoralis.Error = require('./ParseError').default;\r\nMoralis.FacebookUtils = require('./FacebookUtils').default;\r\nMoralis.File = require('./ParseFile').default;\r\nMoralis.GeoPoint = require('./ParseGeoPoint').default;\r\nMoralis.Polygon = require('./ParsePolygon').default;\r\nMoralis.Installation = require('./ParseInstallation').default;\r\nMoralis.LocalDatastore = require('./LocalDatastore');\r\nMoralis.Object = require('./ParseObject').default;\r\nMoralis.Op = {\r\n  Set: ParseOp.SetOp,\r\n  Unset: ParseOp.UnsetOp,\r\n  Increment: ParseOp.IncrementOp,\r\n  Add: ParseOp.AddOp,\r\n  Remove: ParseOp.RemoveOp,\r\n  AddUnique: ParseOp.AddUniqueOp,\r\n  Relation: ParseOp.RelationOp\r\n};\r\nMoralis.Push = require('./Push');\r\nMoralis.Query = require('./ParseQuery').default;\r\nMoralis.Relation = require('./ParseRelation').default;\r\nMoralis.Role = require('./ParseRole').default;\r\nMoralis.Schema = require('./ParseSchema').default;\r\nMoralis.Session = require('./ParseSession').default;\r\nMoralis.Storage = require('./Storage');\r\nMoralis.User = require('./ParseUser').default;\r\nMoralis.LiveQuery = require('./ParseLiveQuery').default;\r\nMoralis.LiveQueryClient = require('./LiveQueryClient').default;\r\nMoralis.Web3 = require('./MoralisWeb3').default;\r\nMoralis.Elrond = require('./MoralisErd').default;\r\nMoralis.Erd = Moralis.Elrond;\r\nMoralis.Dot = require('./MoralisDot').default;\r\nMoralis.UI = require('./MoralisUI').default;\r\n\r\nMoralis._request = function () {\r\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n    args[_key] = arguments[_key];\r\n  }\r\n\r\n  return _CoreManager.default.getRESTController().request.apply(null, args);\r\n};\r\n\r\nMoralis._ajax = function () {\r\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n    args[_key2] = arguments[_key2];\r\n  }\r\n\r\n  return _CoreManager.default.getRESTController().ajax.apply(null, args);\r\n}; // We attempt to match the signatures of the legacy versions of these methods\r\n\r\n\r\nMoralis._decode = function (_, value) {\r\n  return (0, _decode.default)(value);\r\n};\r\n\r\nMoralis._encode = function (value, _, disallowObjects) {\r\n  return (0, _encode.default)(value, disallowObjects);\r\n};\r\n\r\nMoralis._getInstallationId = function () {\r\n  return _CoreManager.default.getInstallationController().currentInstallationId();\r\n};\r\n/**\r\n * Enable pinning in your application.\r\n * This must be called before your application can use pinning.\r\n *\r\n * @static\r\n */\r\n\r\n\r\nMoralis.enableLocalDatastore = function () {\r\n  Moralis.LocalDatastore.isEnabled = true;\r\n};\r\n/**\r\n * Flag that indicates whether Local Datastore is enabled.\r\n *\r\n * @static\r\n * @returns {boolean}\r\n */\r\n\r\n\r\nMoralis.isLocalDatastoreEnabled = function () {\r\n  return Moralis.LocalDatastore.isEnabled;\r\n};\r\n/**\r\n * Gets all contents from Local Datastore\r\n *\r\n * <pre>\r\n * await Moralis.dumpLocalDatastore();\r\n * </pre>\r\n *\r\n * @static\r\n * @returns {object}\r\n */\r\n\r\n\r\nMoralis.dumpLocalDatastore = function () {\r\n  if (!Moralis.LocalDatastore.isEnabled) {\r\n    console.log('Moralis.enableLocalDatastore() must be called first'); // eslint-disable-line no-console\r\n\r\n    return _promise.default.resolve({});\r\n  } else {\r\n    return Moralis.LocalDatastore._getAllContents();\r\n  }\r\n};\r\n/**\r\n * Enable the current user encryption.\r\n * This must be called before login any user.\r\n *\r\n * @static\r\n */\r\n\r\n\r\nMoralis.enableEncryptedUser = function () {\r\n  Moralis.encryptedUser = true;\r\n};\r\n/**\r\n * Flag that indicates whether Encrypted User is enabled.\r\n *\r\n * @static\r\n * @returns {boolean}\r\n */\r\n\r\n\r\nMoralis.isEncryptedUserEnabled = function () {\r\n  return Moralis.encryptedUser;\r\n};\r\n\r\n_CoreManager.default.setCryptoController(_CryptoController.default);\r\n\r\n_CoreManager.default.setInstallationController(_InstallationController.default);\r\n\r\n_CoreManager.default.setRESTController(_RESTController.default);\r\n\r\n// For legacy requires, of the form `var Moralis = require('moralis').Moralis`\r\nMoralis.Moralis = Moralis;\r\nmodule.exports = Moralis;"]},"metadata":{},"sourceType":"script"}